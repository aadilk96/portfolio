{"id":"js/overlap.js","dependencies":[{"name":"/Users/aadilanilkumar/Desktop/website/parcel/package.json","includedInParent":true,"mtime":1598717132364},{"name":"@dogstudio/highway","loc":{"line":1,"column":20},"parent":"/Users/aadilanilkumar/Desktop/website/parcel/js/overlap.js","resolved":"/Users/aadilanilkumar/Desktop/website/parcel/node_modules/@dogstudio/highway/build/highway.module.js"},{"name":"gsap","loc":{"line":4,"column":7},"parent":"/Users/aadilanilkumar/Desktop/website/parcel/js/overlap.js","resolved":"/Users/aadilanilkumar/Desktop/website/parcel/node_modules/gsap/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _highway = _interopRequireDefault(require(\"@dogstudio/highway\"));\n\nvar _gsap = require(\"gsap\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar Overlap = /*#__PURE__*/function (_Highway$Transition) {\n  _inherits(Overlap, _Highway$Transition);\n\n  var _super = _createSuper(Overlap);\n\n  function Overlap() {\n    _classCallCheck(this, Overlap);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Overlap, [{\n    key: \"in\",\n    value: function _in(_ref) {\n      var from = _ref.from,\n          to = _ref.to,\n          done = _ref.done;\n      // Reset Scroll\n      window.scrollTo(0, 0); // Animation\n\n      Tween.fromTo(to, 2, {\n        opacity: 0\n      }, {\n        opacity: 1,\n        onComplete: done\n      }); // Animation\n\n      Tween.fromTo(from, 2, {\n        opacity: 1\n      }, {\n        opacity: 0,\n        onComplete: function onComplete() {\n          // Set New View in DOM Stream\n          to.style.position = 'static'; // Remove Old View\n\n          from.remove();\n        }\n      });\n    }\n  }, {\n    key: \"out\",\n    value: function out(_ref2) {\n      var done = _ref2.done;\n      done();\n    }\n  }]);\n\n  return Overlap;\n}(Highway.Transition);\n\nvar _default = Overlap;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"js/overlap.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"js/overlap.js","original":{"line":2,"column":0}},{"name":"Overlap","generated":{"line":36,"column":4},"source":"js/overlap.js","original":{"line":6,"column":6}},{"generated":{"line":49,"column":30},"source":"js/overlap.js","original":{"line":11,"column":7}},{"generated":{"line":50,"column":0},"source":"js/overlap.js","original":{"line":11,"column":7}},{"name":"from","generated":{"line":50,"column":10},"source":"js/overlap.js","original":{"line":8,"column":8}},{"generated":{"line":50,"column":14},"source":"js/overlap.js","original":{"line":11,"column":7}},{"name":"from","generated":{"line":50,"column":22},"source":"js/overlap.js","original":{"line":8,"column":8}},{"generated":{"line":50,"column":26},"source":"js/overlap.js","original":{"line":11,"column":7}},{"generated":{"line":51,"column":0},"source":"js/overlap.js","original":{"line":11,"column":7}},{"name":"to","generated":{"line":51,"column":10},"source":"js/overlap.js","original":{"line":9,"column":8}},{"generated":{"line":51,"column":12},"source":"js/overlap.js","original":{"line":11,"column":7}},{"name":"to","generated":{"line":51,"column":20},"source":"js/overlap.js","original":{"line":9,"column":8}},{"generated":{"line":51,"column":22},"source":"js/overlap.js","original":{"line":11,"column":7}},{"generated":{"line":52,"column":0},"source":"js/overlap.js","original":{"line":11,"column":7}},{"name":"done","generated":{"line":52,"column":10},"source":"js/overlap.js","original":{"line":10,"column":8}},{"generated":{"line":52,"column":14},"source":"js/overlap.js","original":{"line":11,"column":7}},{"name":"done","generated":{"line":52,"column":22},"source":"js/overlap.js","original":{"line":10,"column":8}},{"generated":{"line":52,"column":26},"source":"js/overlap.js","original":{"line":11,"column":7}},{"generated":{"line":53,"column":0},"source":"js/overlap.js","original":{"line":12,"column":8}},{"name":"window","generated":{"line":54,"column":0},"source":"js/overlap.js","original":{"line":13,"column":8}},{"name":"window","generated":{"line":54,"column":6},"source":"js/overlap.js","original":{"line":13,"column":8}},{"generated":{"line":54,"column":12},"source":"js/overlap.js","original":{"line":13,"column":14}},{"name":"scrollTo","generated":{"line":54,"column":13},"source":"js/overlap.js","original":{"line":13,"column":15}},{"generated":{"line":54,"column":21},"source":"js/overlap.js","original":{"line":13,"column":8}},{"generated":{"line":54,"column":22},"source":"js/overlap.js","original":{"line":13,"column":24}},{"generated":{"line":54,"column":23},"source":"js/overlap.js","original":{"line":13,"column":8}},{"generated":{"line":54,"column":25},"source":"js/overlap.js","original":{"line":13,"column":27}},{"generated":{"line":54,"column":26},"source":"js/overlap.js","original":{"line":13,"column":8}},{"generated":{"line":54,"column":28},"source":"js/overlap.js","original":{"line":11,"column":7}},{"generated":{"line":54,"column":29},"source":"js/overlap.js","original":{"line":15,"column":8}},{"name":"Tween","generated":{"line":56,"column":0},"source":"js/overlap.js","original":{"line":16,"column":8}},{"name":"Tween","generated":{"line":56,"column":6},"source":"js/overlap.js","original":{"line":16,"column":8}},{"generated":{"line":56,"column":11},"source":"js/overlap.js","original":{"line":16,"column":13}},{"name":"fromTo","generated":{"line":56,"column":12},"source":"js/overlap.js","original":{"line":16,"column":14}},{"generated":{"line":56,"column":18},"source":"js/overlap.js","original":{"line":16,"column":8}},{"name":"to","generated":{"line":56,"column":19},"source":"js/overlap.js","original":{"line":16,"column":21}},{"generated":{"line":56,"column":21},"source":"js/overlap.js","original":{"line":16,"column":8}},{"generated":{"line":56,"column":23},"source":"js/overlap.js","original":{"line":16,"column":25}},{"generated":{"line":56,"column":24},"source":"js/overlap.js","original":{"line":16,"column":8}},{"generated":{"line":56,"column":26},"source":"js/overlap.js","original":{"line":16,"column":28}},{"name":"opacity","generated":{"line":57,"column":0},"source":"js/overlap.js","original":{"line":17,"column":12}},{"name":"opacity","generated":{"line":57,"column":8},"source":"js/overlap.js","original":{"line":17,"column":12}},{"generated":{"line":57,"column":15},"source":"js/overlap.js","original":{"line":17,"column":19}},{"generated":{"line":57,"column":17},"source":"js/overlap.js","original":{"line":17,"column":21}},{"generated":{"line":58,"column":0},"source":"js/overlap.js","original":{"line":16,"column":28}},{"generated":{"line":58,"column":7},"source":"js/overlap.js","original":{"line":16,"column":8}},{"generated":{"line":58,"column":9},"source":"js/overlap.js","original":{"line":18,"column":11}},{"name":"opacity","generated":{"line":59,"column":0},"source":"js/overlap.js","original":{"line":19,"column":12}},{"name":"opacity","generated":{"line":59,"column":8},"source":"js/overlap.js","original":{"line":19,"column":12}},{"generated":{"line":59,"column":15},"source":"js/overlap.js","original":{"line":19,"column":19}},{"generated":{"line":59,"column":17},"source":"js/overlap.js","original":{"line":19,"column":21}},{"generated":{"line":59,"column":18},"source":"js/overlap.js","original":{"line":18,"column":11}},{"name":"onComplete","generated":{"line":60,"column":0},"source":"js/overlap.js","original":{"line":20,"column":12}},{"name":"onComplete","generated":{"line":60,"column":8},"source":"js/overlap.js","original":{"line":20,"column":12}},{"generated":{"line":60,"column":18},"source":"js/overlap.js","original":{"line":20,"column":22}},{"name":"done","generated":{"line":60,"column":20},"source":"js/overlap.js","original":{"line":20,"column":24}},{"generated":{"line":61,"column":0},"source":"js/overlap.js","original":{"line":18,"column":11}},{"generated":{"line":61,"column":7},"source":"js/overlap.js","original":{"line":16,"column":8}},{"generated":{"line":61,"column":9},"source":"js/overlap.js","original":{"line":11,"column":7}},{"generated":{"line":61,"column":10},"source":"js/overlap.js","original":{"line":23,"column":8}},{"name":"Tween","generated":{"line":63,"column":0},"source":"js/overlap.js","original":{"line":24,"column":8}},{"name":"Tween","generated":{"line":63,"column":6},"source":"js/overlap.js","original":{"line":24,"column":8}},{"generated":{"line":63,"column":11},"source":"js/overlap.js","original":{"line":24,"column":13}},{"name":"fromTo","generated":{"line":63,"column":12},"source":"js/overlap.js","original":{"line":24,"column":14}},{"generated":{"line":63,"column":18},"source":"js/overlap.js","original":{"line":24,"column":8}},{"name":"from","generated":{"line":63,"column":19},"source":"js/overlap.js","original":{"line":24,"column":21}},{"generated":{"line":63,"column":23},"source":"js/overlap.js","original":{"line":24,"column":8}},{"generated":{"line":63,"column":25},"source":"js/overlap.js","original":{"line":24,"column":27}},{"generated":{"line":63,"column":26},"source":"js/overlap.js","original":{"line":24,"column":8}},{"generated":{"line":63,"column":28},"source":"js/overlap.js","original":{"line":24,"column":30}},{"name":"opacity","generated":{"line":64,"column":0},"source":"js/overlap.js","original":{"line":25,"column":12}},{"name":"opacity","generated":{"line":64,"column":8},"source":"js/overlap.js","original":{"line":25,"column":12}},{"generated":{"line":64,"column":15},"source":"js/overlap.js","original":{"line":25,"column":19}},{"generated":{"line":64,"column":17},"source":"js/overlap.js","original":{"line":25,"column":21}},{"generated":{"line":65,"column":0},"source":"js/overlap.js","original":{"line":24,"column":30}},{"generated":{"line":65,"column":7},"source":"js/overlap.js","original":{"line":24,"column":8}},{"generated":{"line":65,"column":9},"source":"js/overlap.js","original":{"line":26,"column":11}},{"name":"opacity","generated":{"line":66,"column":0},"source":"js/overlap.js","original":{"line":27,"column":12}},{"name":"opacity","generated":{"line":66,"column":8},"source":"js/overlap.js","original":{"line":27,"column":12}},{"generated":{"line":66,"column":15},"source":"js/overlap.js","original":{"line":27,"column":19}},{"generated":{"line":66,"column":17},"source":"js/overlap.js","original":{"line":27,"column":21}},{"generated":{"line":66,"column":18},"source":"js/overlap.js","original":{"line":26,"column":11}},{"name":"onComplete","generated":{"line":67,"column":0},"source":"js/overlap.js","original":{"line":28,"column":12}},{"name":"onComplete","generated":{"line":67,"column":8},"source":"js/overlap.js","original":{"line":28,"column":12}},{"generated":{"line":67,"column":18},"source":"js/overlap.js","original":{"line":28,"column":22}},{"generated":{"line":67,"column":20},"source":"js/overlap.js","original":{"line":28,"column":24}},{"generated":{"line":67,"column":42},"source":"js/overlap.js","original":{"line":28,"column":30}},{"generated":{"line":68,"column":0},"source":"js/overlap.js","original":{"line":29,"column":16}},{"name":"to","generated":{"line":69,"column":0},"source":"js/overlap.js","original":{"line":30,"column":16}},{"name":"to","generated":{"line":69,"column":10},"source":"js/overlap.js","original":{"line":30,"column":16}},{"generated":{"line":69,"column":12},"source":"js/overlap.js","original":{"line":30,"column":18}},{"name":"style","generated":{"line":69,"column":13},"source":"js/overlap.js","original":{"line":30,"column":19}},{"generated":{"line":69,"column":18},"source":"js/overlap.js","original":{"line":30,"column":16}},{"name":"position","generated":{"line":69,"column":19},"source":"js/overlap.js","original":{"line":30,"column":25}},{"generated":{"line":69,"column":27},"source":"js/overlap.js","original":{"line":30,"column":16}},{"generated":{"line":69,"column":30},"source":"js/overlap.js","original":{"line":30,"column":36}},{"generated":{"line":69,"column":38},"source":"js/overlap.js","original":{"line":30,"column":16}},{"generated":{"line":69,"column":39},"source":"js/overlap.js","original":{"line":28,"column":30}},{"generated":{"line":69,"column":40},"source":"js/overlap.js","original":{"line":32,"column":16}},{"name":"from","generated":{"line":71,"column":0},"source":"js/overlap.js","original":{"line":33,"column":16}},{"name":"from","generated":{"line":71,"column":10},"source":"js/overlap.js","original":{"line":33,"column":16}},{"generated":{"line":71,"column":14},"source":"js/overlap.js","original":{"line":33,"column":20}},{"name":"remove","generated":{"line":71,"column":15},"source":"js/overlap.js","original":{"line":33,"column":21}},{"generated":{"line":71,"column":21},"source":"js/overlap.js","original":{"line":33,"column":16}},{"generated":{"line":72,"column":0},"source":"js/overlap.js","original":{"line":34,"column":13}},{"generated":{"line":73,"column":0},"source":"js/overlap.js","original":{"line":26,"column":11}},{"generated":{"line":73,"column":7},"source":"js/overlap.js","original":{"line":24,"column":8}},{"generated":{"line":74,"column":0},"source":"js/overlap.js","original":{"line":36,"column":5}},{"generated":{"line":77,"column":31},"source":"js/overlap.js","original":{"line":40,"column":7}},{"generated":{"line":78,"column":0},"source":"js/overlap.js","original":{"line":40,"column":7}},{"name":"done","generated":{"line":78,"column":10},"source":"js/overlap.js","original":{"line":39,"column":8}},{"generated":{"line":78,"column":14},"source":"js/overlap.js","original":{"line":40,"column":7}},{"name":"done","generated":{"line":78,"column":23},"source":"js/overlap.js","original":{"line":39,"column":8}},{"generated":{"line":78,"column":27},"source":"js/overlap.js","original":{"line":40,"column":7}},{"name":"done","generated":{"line":79,"column":0},"source":"js/overlap.js","original":{"line":41,"column":8}},{"name":"done","generated":{"line":79,"column":6},"source":"js/overlap.js","original":{"line":41,"column":8}},{"generated":{"line":79,"column":10},"source":"js/overlap.js","original":{"line":41,"column":12}},{"generated":{"line":80,"column":0},"source":"js/overlap.js","original":{"line":42,"column":5}},{"name":"Highway","generated":{"line":84,"column":2},"source":"js/overlap.js","original":{"line":6,"column":22}},{"generated":{"line":84,"column":9},"source":"js/overlap.js","original":{"line":6,"column":29}},{"name":"Transition","generated":{"line":84,"column":10},"source":"js/overlap.js","original":{"line":6,"column":30}},{"name":"Overlap","generated":{"line":86,"column":15},"source":"js/overlap.js","original":{"line":44,"column":15}}],"sources":{"js/overlap.js":"import highway from '@dogstudio/highway';\nimport {\n    TimelineLite\n} from 'gsap';\n\nclass Overlap extends Highway.Transition {\n    in ({\n        from,\n        to,\n        done\n    }) {\n        // Reset Scroll\n        window.scrollTo(0, 0);\n\n        // Animation\n        Tween.fromTo(to, 2, {\n            opacity: 0\n        }, {\n            opacity: 1,\n            onComplete: done\n        });\n\n        // Animation\n        Tween.fromTo(from, 2, {\n            opacity: 1\n        }, {\n            opacity: 0,\n            onComplete: () => {\n                // Set New View in DOM Stream\n                to.style.position = 'static';\n\n                // Remove Old View\n                from.remove();\n            }\n        });\n    }\n\n    out({\n        done\n    }) {\n        done();\n    }\n}\nexport default Overlap;"},"lineCount":null}},"error":null,"hash":"b9a7fdd2b65b8c08aaabb3d519c11e1e","cacheData":{"env":{}}}